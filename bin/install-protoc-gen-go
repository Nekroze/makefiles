#!/usr/bin/env bash
set -euo pipefail

# packages is a preferentially ordered list of packages that provide the
# protoc-gen-go binary.
#
# Each entry is a pair of module path to look for in go.mod, and the
# "protoc-gen-go" package to install if that module is found.
packages=(
    # 'google.golang.org/protobuf google.golang.org/protobuf/cmd/protoc-gen-go'
    'github.com/golang/protobuf github.com/golang/protobuf/protoc-gen-go'
)

# look in go.mod for each of the desired packages
for entry in "${packages[@]}"; do
    pair=($entry)
    module="${pair[0]}"
    package="${pair[1]}"

    if version="$(go list -f '{{.Version}}' -m "$module" 2> /dev/null)"; then
        echo "installing $package@$version as per go.mod"
        GOBIN="$1" go get "$package@$version"
        exit
    fi
done

# we couldn't find anything in go.mod, so install our top preference
for entry in "${packages[@]}"; do
    pair=($entry)
    module="${pair[0]}"
    package="${pair[1]}"
    # default to the latest version of the package
    version="latest"

    echo "installing $package@$version by default"
    GOBIN="$1" go get "$package@$version"
    exit
done
